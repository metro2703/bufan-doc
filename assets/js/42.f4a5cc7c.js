(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{330:function(t,s,a){"use strict";a.r(s);var r=a(2),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"减少页面体积，提升网络加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#减少页面体积，提升网络加载"}},[t._v("#")]),t._v(" 减少页面体积，提升网络加载")]),t._v(" "),a("ul",[a("li",[t._v("静态资源的压缩合并（JS 代码压缩合并、CSS 代码压缩合并、雪碧图）")]),t._v(" "),a("li",[t._v("静态资源缓存（资源名称加 MD5 戳）")]),t._v(" "),a("li",[t._v("使用 CDN 让资源加载更快")])]),t._v(" "),a("h2",{attrs:{id:"图片优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图片优化"}},[t._v("#")]),t._v(" 图片优化")]),t._v(" "),a("ol",[a("li",[t._v("不用图片。很多时候会使用到很多修饰类图片，其实这类修饰图片完全可以用 CSS 去代替。")]),t._v(" "),a("li",[t._v("对于移动端来说，屏幕宽度就那么点，完全没有必要去加载原图浪费带宽。一般图片都用 CDN 加载，可以计算出适配屏幕的宽度，然后去请求相应裁剪好的图片。")]),t._v(" "),a("li",[t._v("小图使用 base64 格式")]),t._v(" "),a("li",[t._v("将多个图标文件整合到一张图片中（雪碧图）")]),t._v(" "),a("li",[t._v("选择正确的图片格式：\n"),a("ul",[a("li",[t._v("对于能够显示 WebP 格式的浏览器尽量使用 WebP 格式。因为 WebP 格式具有更好的图像数据压缩算法，能带来更小的图片体积，而且拥有肉眼识别无差异的图像质量，缺点就是兼容性并不好")]),t._v(" "),a("li",[t._v("小图使用 PNG，其实对于大部分图标这类图片，完全可以使用 SVG 代替")]),t._v(" "),a("li",[t._v("照片使用 JPEG")])])])]),t._v(" "),a("h2",{attrs:{id:"dns-预解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dns-预解析"}},[t._v("#")]),t._v(" DNS 预解析")]),t._v(" "),a("p",[t._v("DNS 解析也是需要时间的，可以通过预解析的方式来预先获得域名所对应的 IP。")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("dns-prefetch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("//yuchengkai.cn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),a("h2",{attrs:{id:"静态资源的压缩合并"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态资源的压缩合并"}},[t._v("#")]),t._v(" 静态资源的压缩合并")]),t._v(" "),a("p",[t._v("如果不合并，每个都会走一遍之前介绍的请求过程")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<script src="a.js"><\/script>\n<script src="b.js"><\/script>\n<script src="c.js"><\/script>\n\n')])])]),a("p",[t._v("如果合并了，就只走一遍请求过程")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<script src="abc.js"><\/script>\n\n')])])]),a("h2",{attrs:{id:"静态资源缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态资源缓存"}},[t._v("#")]),t._v(" 静态资源缓存")]),t._v(" "),a("p",[t._v("利用浏览器缓存机制对资源进行有效合理的缓存。")]),t._v(" "),a("h2",{attrs:{id:"使用-cdn-让资源加载更快"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-cdn-让资源加载更快"}},[t._v("#")]),t._v(" 使用 CDN 让资源加载更快")]),t._v(" "),a("p",[t._v("CDN 会提供专业的加载优化方案，静态资源要尽量放在 CDN 上。例如：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<script src="https://cdn.bootcss.com/zepto/1.0rc1/zepto.min.js"><\/script>\n\n')])])])])}),[],!1,null,null,null);s.default=e.exports}}]);