(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{320:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"跨域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跨域"}},[t._v("#")]),t._v(" 跨域")]),t._v(" "),a("blockquote",[a("p",[t._v("题目：如何实现跨域？")])]),t._v(" "),a("p",[t._v("浏览器中有 "),a("strong",[t._v("同源策略")]),t._v(" ，即一个域下的页面中，无法通过 Ajax 获取到其他域的接口。例如有一个接口"),a("code",[t._v("http://m.juejin.com/course/ajaxcourserecom?cid=459")]),t._v("，你自己的一个页面"),a("code",[t._v("http://www.yourname.com/page1.html")]),t._v("中的 Ajax 无法获取这个接口。这正是命中了“同源策略”。如果浏览器哪些地方忽略了同源策略，那就是浏览器的安全漏洞，需要紧急修复。")]),t._v(" "),a("p",[t._v("url 哪些地方不同算作跨域？")]),t._v(" "),a("ul",[a("li",[t._v("协议")]),t._v(" "),a("li",[t._v("域名")]),t._v(" "),a("li",[t._v("端口")])]),t._v(" "),a("p",[t._v("但是 HTML 中几个标签能逃避过同源策略——"),a("code",[t._v('<script src="xxx">')]),t._v("、"),a("code",[t._v('<img src="xxxx"/>')]),t._v("、"),a("code",[t._v('<link href="xxxx">')]),t._v("，这三个标签的"),a("code",[t._v("src/href")]),t._v("可以加载其他域的资源，不受同源策略限制。")]),t._v(" "),a("p",[t._v("因此，这使得这三个标签可以做一些特殊的事情。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("<img>")]),t._v("可以做打点统计，因为统计方并不一定是同域的，在讲解 JS 基础知识异步的时候有过代码示例。除了能跨域之外，"),a("code",[t._v("<img>")]),t._v("几乎没有浏览器兼容问题，它是一个非常古老的标签。")]),t._v(" "),a("li",[a("code",[t._v("<script>")]),t._v("和"),a("code",[t._v("<link>")]),t._v("可以使用 CDN，CDN 基本都是其他域的链接。")]),t._v(" "),a("li",[t._v("另外"),a("code",[t._v("<script>")]),t._v("还可以实现 JSONP，能获取其他域接口的信息，接下来马上讲解。")])]),t._v(" "),a("p",[t._v("但是请注意，所有的跨域请求方式，最终都需要信息提供方来做出相应的支持和改动，也就是要经过信息提供方的同意才行，否则接收方是无法得到它们的信息的，浏览器是不允许的。")]),t._v(" "),a("h2",{attrs:{id:"解决跨域-jsonp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决跨域-jsonp"}},[t._v("#")]),t._v(" 解决跨域 - JSONP")]),t._v(" "),a("p",[t._v("首先，有一个概念你要明白，例如访问"),a("code",[t._v("http://coding.m.juejin.com/classindex.html")]),t._v("的时候，服务器端就一定有一个"),a("code",[t._v("classindex.html")]),t._v("文件吗？—— 不一定，服务器可以拿到这个请求，动态生成一个文件，然后返回。 同理，"),a("code",[t._v('<script src="http://coding.m.juejin.com/api.js">')]),t._v("也不一定加载一个服务器端的静态文件，服务器也可以动态生成文件并返回。OK，接下来正式开始。")]),t._v(" "),a("p",[t._v("例如我们的网站和掘金网，肯定不是一个域。我们需要掘金网提供一个接口，供我们来获取。首先，我们在自己的页面这样定义")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\twindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("callback")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这是我们跨域得到信息")]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("然后掘金网给我提供了一个"),a("code",[t._v("http://coding.m.juejin.com/api.js")]),t._v("，内容如下（之前说过，服务器可动态生成内容）")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("最后我们在页面中加入"),a("code",[t._v('<script src="http://coding.m.juejin.com/api.js"><\/script>')]),t._v("，那么这个 js 加载之后，就会执行内容，我们就得到内容了。")]),t._v(" "),a("h2",{attrs:{id:"解决跨域-服务器端设置-http-header"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决跨域-服务器端设置-http-header"}},[t._v("#")]),t._v(" 解决跨域 - 服务器端设置 http header")]),t._v(" "),a("p",[t._v("这是需要在服务器端设置的，作为前端工程师我们不用详细掌握，但是要知道有这么个解决方案。而且，现在推崇的跨域解决方案是这一种，比 JSONP 简单许多。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Access-Control-Allow-Origin"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://m.juejin.com/"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 第二个参数填写允许跨域的域名称，不建议直接写 "*"')]),t._v("\nresponse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Access-Control-Allow-Headers"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"X-Requested-With"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nresponse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Access-Control-Allow-Methods"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PUT,POST,GET,DELETE,OPTIONS"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 接收跨域的cookie")]),t._v("\nresponse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Access-Control-Allow-Credentials"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("更多的跨域方案，可以参考"),a("a",{attrs:{href:"https://juejin.im/post/5c23993de51d457b8c1f4ee1",target:"_blank",rel:"noopener noreferrer"}},[t._v("九种跨域实现方式"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);